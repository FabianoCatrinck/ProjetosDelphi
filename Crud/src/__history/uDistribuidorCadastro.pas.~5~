unit uDistribuidorCadastro;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons;

type
  TfrmDistribuidorCadastro = class(TForm)
    lblNome: TLabel;
    lblCPFCNPJ: TLabel;
    edtCPFCNPJ: TEdit;
    edtNome: TEdit;
    btnOk: TBitBtn;
    btnCancelar: TBitBtn;
    procedure btnCancelarClick(Sender: TObject);
    procedure btnOkClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
    FCodigo: Integer;
    FNome,
    FCPFCNPJ: String;
    FNovoDistribuidor: Boolean;

  public
    { Public declarations }
    property Codigo: Integer read FCodigo write FCodigo;
    property Nome: String write FNome;
    property CPFCNPJ: String write FCPFCNPJ;
  end;


implementation

{$R *.dfm}

uses uDM;

procedure TfrmDistribuidorCadastro.btnCancelarClick(Sender: TObject);
begin
  DM.qryDistribuidor.Cancel;
  Close;
end;

procedure TfrmDistribuidorCadastro.btnOkClick(Sender: TObject);
begin
  if edtNome.Text = '' then
  begin
    MessageDlg('O campo nome não pode ficar em branco. Verifique.', mtInformation, [mbOk], 0);
    edtNome.SetFocus;
    Abort;
  end;

  if DM.qryDistribuidor.Active = False then
     DM.qryDistribuidor.Open;

  DM.qryDistribuidor.FieldByName('nome').AsString := edtNome.Text;
  DM.qryDistribuidor.FieldByName('cpfcnpj').AsString := edtCPFCNPJ.Text;
  DM.qryDistribuidor.Post;

  Close;
end;

procedure TfrmDistribuidorCadastro.FormShow(Sender: TObject);
begin
  edtNome.Text := FNome;
  edtCPFCNPJ.Text := FCPFCNPJ;

  if edtNome.CanFocus then
    edtNome.SetFocus;

  if FCodigo = 0 then
    begin
      FCodigo := DM.ObterCodigoTabela('Codigo', 'Distribuidor');
      FNovoDistribuidor := True;
    end
  else
    FNovoDistribuidor := False;
end;

end.
